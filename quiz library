local Library = {}

local CoreGui = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
local TweenService = game:GetService("TweenService")

function Create(instance, properties, children)
	local object = Instance.new(instance)

	for property, value in pairs(properties or {}) do
		object[property] = value
	end

	for _, child in pairs(children or {}) do
		child.Parent = object
	end

	return object
end

function Library.New(settings)
	
	local Quiz = Create("ScreenGui", { 
		["Name"] = settings["Name"] or "Quiz",
		["Parent"] = CoreGui 
	}, {
		Create("Frame", {
			["Name"] = "Back",
			["AnchorPoint"] = Vector2.new(.5, .5),
			["BackgroundTransparency"] = 1,
			["ClipsDescendants"] = true,
			["Position"] = UDim2.new(.5, 0, .5, 0),
			["Size"] = UDim2.new(0, 300, 0, 200),
		}, {
			Create("Frame", {
				["Name"] = "Start",
				["BackgroundColor3"] = Color3.fromRGB(30, 30, 30),
				["BorderSizePixel"] = 0,
				["Size"] = UDim2.new(1, 0, 1, 0)
			}, {
				Create("TextButton", {
					["Name"] = "Button",
					["AnchorPoint"] = Vector2.new(0, .5),
					["BackgroundColor3"] = Color3.fromRGB(50, 50, 50),
					["BorderSizePixel"] = 0,
					["Position"] = UDim2.new(0, 0, .5, 0),
					["Size"] = UDim2.new(1, 0, .25, 0),
					["Font"] = Enum.Font.GothamMedium,
					["Text"] = settings["Name"] or "Quiz",
					["TextColor3"] = Color3.fromRGB(255, 255, 255),
					["TextSize"] = 14
				})
			})
		})
	})
	
	local Slides = {}
	local CurrentSlide = 0
	local Conn = nil
	
	Conn = Quiz.Back.Start.Button.MouseButton1Click:Connect(function()
		if Slides[1] then
			Conn:Disconnect()
			
			CurrentSlide += 1
			
			TweenService:Create(Quiz.Back.Start, TweenInfo.new(1), {["Position"] = UDim2.new(-1, 0, 0, 0)}):Play()
			TweenService:Create(Slides[CurrentSlide], TweenInfo.new(1), {["Position"] = UDim2.new(0, 0, 0, 0)}):Play()
		end
	end)
	
	local Functions = {}
	
	function Functions:AddQuestion(settings, callback)
		local Main = Create("Frame", {
			["Name"] = "Main",
			["BackgroundColor3"] = Color3.fromRGB(30, 30, 30),
			["BorderSizePixel"] = 0,
			["Parent"] = Quiz.Back,
			["Position"] = UDim2.new(1, 0, 0, 0),
			["Size"] = UDim2.new(1, 0, 1, 0)
		}, {
			Create("TextLabel", {
				["Name"] = "Text",
				["AnchorPoint"] = Vector2.new(0, .5),
				["BackgroundColor3"] = Color3.fromRGB(50, 50, 50),
				["BorderSizePixel"] = 0,
				["Position"] = UDim2.new(0, 0, .25, 0),
				["Size"] = UDim2.new(1, 0, .25, 0),
				["Font"] = Enum.Font.GothamMedium,
				["Text"] = settings["Question"] or "Question",
				["TextColor3"] = Color3.fromRGB(255, 255, 255),
				["TextSize"] = 14
			}),
			
			Create("Frame", {
				["Name"] = "Box",
				["AnchorPoint"] = Vector2.new(0, 1),
				["BackgroundTransparency"] = 1,
				["BorderSizePixel"] = 0,
				["Position"] = UDim2.new(0, 0, 1, 0),
				["Size"] = UDim2.new(1, 0, .5, 0)	
			}, {
				Create("UIGridLayout", {
					["Name"] = "GridLayout",
					["SortOrder"] = Enum.SortOrder.Name,
					["CellPadding"] = UDim2.new(0, 0, 0, 0),
					["CellSize"] = UDim2.new(.5, 0, .5, 0)
				})
			})
		})
		
		local Conns = {}
		
		for Number, Answer in pairs(settings["Answers"]) do
			if Number <= 4 then
				local Button = Create("TextButton", {
					["Name"] = Number,
					["Parent"] = Main.Box,
					["BackgroundColor3"] = Color3.fromRGB(150 - Number * 20, 150 - Number * 20, 255 - Number * 20),
					["BorderSizePixel"] = 0,
					["Size"] = UDim2.new(0, 200, 0, 50),
					["Font"] = Enum.Font.GothamMedium,
					["Text"] = Answer,
					["TextColor3"] = Color3.fromRGB(255, 255, 255),
					["TextSize"] = 12
				})
				
				local OnClicked = nil
				
				if callback then
					OnClicked = function()
						for _, Conn in pairs(Conns) do
							Conn:Disconnect()
						end
						
						callback(Answer)
						
						local Tween = TweenService:Create(Main, TweenInfo.new(1), {["Position"] = UDim2.new(-1, 0, 0, 0)}) 
						Tween:Play()
						
						if CurrentSlide == #Slides then
							Tween.Completed:Wait()
							Quiz:Destroy()
						else
							CurrentSlide += 1
							TweenService:Create(Slides[CurrentSlide], TweenInfo.new(1), {["Position"] = UDim2.new(0, 0, 0, 0)}):Play()
						end
					end
				else
					OnClicked = function()
						for _, Conn in pairs(Conns) do
							Conn:Disconnect()
						end

						local Tween = TweenService:Create(Main, TweenInfo.new(1), {["Position"] = UDim2.new(-1, 0, 0, 0)}) 
						Tween:Play()

						if CurrentSlide == #Slides then
							Tween.Completed:Wait()
							Quiz:Destroy()
						else
							CurrentSlide += 1
							TweenService:Create(Slides[CurrentSlide], TweenInfo.new(1), {["Position"] = UDim2.new(0, 0, 0, 0)}):Play()
						end
					end
				end
				
				table.insert(Conns, Button.MouseButton1Click:Connect(OnClicked))
			end
		end
		
		table.insert(Slides, Main)
		
		return Main
	end
	
	return Functions
end

return Library
